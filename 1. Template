To understand more of what is asked ..
Try some dummy inputs and see if you are answering those questions right .....
Ask more questions for invalid inputs .. or say you are assuming valid input for simplicity ...

if an array
  1 always ask if there are duplicates
  2 always ask if there are negative number
  3 always consider 0 as input (usually 0 is an edge case)

Think if you can do 2+ passes on data set and figure out if you can solve?

alwasy think is stack or Queue before you go to more complex DS.

there are problems sometimes there are special cases where you dont want to run it when i=0 or
when you want when i==n. Remeber you can just ask that condition  with existing condtion
if(i!=0 && someCondition){  // 3SUM problem
}
OR
if(i==n || somecondition) // basic calculator


also , think trying to process from left and proceffing from right.
Sometimes cominging two would give you a result or some time you hve to take better result from two of those approach.
e.g 2 pass - product except self
e.g candy crush



go through corner test cases.

Later you can talk about overflows of values.

Later you can talk about large set of numbers where it cant fit into the memory.
